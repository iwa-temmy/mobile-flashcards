{"ast":null,"code":"import { getDecks } from \"../utils/_api\";\nexport var RECEIVE_DECKS = 'RECEIVE_DECKS';\nexport var ADD_DECK = 'ADD_DECK';\nexport var REMOVE_DECK = 'REMOVE_DECK';\nexport var ADD_CARD = 'ADD_CARD';\nexport var RESET_STORE = 'RESET_STORE';\nexport function receiveDecks(decks) {\n  return {\n    type: RECEIVE_DECKS,\n    decks: decks\n  };\n}\nexport function addDeck(title) {\n  return {\n    type: ADD_DECK,\n    title: title\n  };\n}\nexport function removeDeck(id) {\n  return {\n    type: REMOVE_DECK,\n    id: id\n  };\n}\nexport function addCardToDeck(deckId, card) {\n  return {\n    type: ADD_CARD,\n    deckId: deckId,\n    card: card\n  };\n}\nexport function resetStore() {\n  return {\n    type: RESET_STORE\n  };\n}\nexport function handleInitialData() {\n  return function (dispatch) {\n    return getDecks().then(function (decks) {\n      dispatch(receiveDecks(decks));\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/Dekiller_j/Desktop/MyWorks/mobile-flashcards/actions/index.js"],"names":["getDecks","RECEIVE_DECKS","ADD_DECK","REMOVE_DECK","ADD_CARD","RESET_STORE","receiveDecks","decks","type","addDeck","title","removeDeck","id","addCardToDeck","deckId","card","resetStore","handleInitialData","dispatch","then"],"mappings":"AAAA,SAASA,QAAT;AAEA,OAAO,IAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AAGP,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAC/B,SAAO;AACHC,IAAAA,IAAI,EAAEP,aADH;AAEHM,IAAAA,KAAK,EAALA;AAFG,GAAP;AAIH;AAED,OAAO,SAASE,OAAT,CAAiBC,KAAjB,EAAuB;AAC1B,SAAO;AACHF,IAAAA,IAAI,EAAEN,QADH;AAEHQ,IAAAA,KAAK,EAALA;AAFG,GAAP;AAIH;AAED,OAAO,SAASC,UAAT,CAAoBC,EAApB,EAAuB;AAC1B,SAAO;AACHJ,IAAAA,IAAI,EAAEL,WADH;AAEHS,IAAAA,EAAE,EAAFA;AAFG,GAAP;AAIH;AAED,OAAO,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,IAA/B,EAAoC;AACvC,SAAO;AACHP,IAAAA,IAAI,EAAGJ,QADJ;AAEHU,IAAAA,MAAM,EAANA,MAFG;AAGHC,IAAAA,IAAI,EAAJA;AAHG,GAAP;AAKH;AAED,OAAO,SAASC,UAAT,GAAqB;AACxB,SAAO;AACHR,IAAAA,IAAI,EAAEH;AADH,GAAP;AAGH;AAGD,OAAO,SAASY,iBAAT,GAA4B;AAC/B,SAAO,UAAAC,QAAQ,EAAI;AACf,WAAOlB,QAAQ,GAAGmB,IAAX,CAAgB,UAAAZ,KAAK,EAAI;AAC5BW,MAAAA,QAAQ,CAACZ,YAAY,CAACC,KAAD,CAAb,CAAR;AACH,KAFM,CAAP;AAGH,GAJD;AAKH","sourcesContent":["import { getDecks } from '../utils/_api'\r\n\r\nexport const RECEIVE_DECKS = 'RECEIVE_DECKS'\r\nexport const ADD_DECK = 'ADD_DECK'\r\nexport const REMOVE_DECK = 'REMOVE_DECK'\r\nexport const ADD_CARD = 'ADD_CARD'\r\nexport const RESET_STORE = 'RESET_STORE'\r\n\r\n\r\nexport function receiveDecks(decks){\r\n    return {\r\n        type: RECEIVE_DECKS,\r\n        decks\r\n    }\r\n}\r\n\r\nexport function addDeck(title){\r\n    return {\r\n        type: ADD_DECK,\r\n        title\r\n    }\r\n}\r\n\r\nexport function removeDeck(id){\r\n    return {\r\n        type: REMOVE_DECK,\r\n        id,\r\n    }\r\n}\r\n\r\nexport function addCardToDeck(deckId, card){\r\n    return {\r\n        type:  ADD_CARD,\r\n        deckId,\r\n        card,\r\n    }\r\n}\r\n\r\nexport function resetStore(){\r\n    return {\r\n        type: RESET_STORE\r\n    }\r\n}\r\n\r\n\r\nexport function handleInitialData(){\r\n    return dispatch => {\r\n        return getDecks().then(decks => {\r\n            dispatch(receiveDecks(decks))\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}