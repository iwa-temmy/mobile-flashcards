{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dekiller_j\\\\Desktop\\\\MyWorks\\\\mobile-flashcards\\\\components\\\\AddDeck.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { gray, green, white, textGray } from \"../utils/colors\";\nimport { connect } from 'react-redux';\nimport { addDeck } from \"../actions/index\";\nexport var AddDeck = function (_Component) {\n  _inherits(AddDeck, _Component);\n\n  var _super = _createSuper(AddDeck);\n\n  function AddDeck() {\n    var _this;\n\n    _classCallCheck(this, AddDeck);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      text: ''\n    };\n\n    _this.handleChange = function (text) {\n      _this.setState({\n        text: text\n      });\n    };\n\n    _this.handleSubmit = function () {\n      var _this$props = _this.props,\n          addDeck = _this$props.addDeck,\n          navigation = _this$props.navigation;\n      addDeck(_this.state.text);\n\n      _this.setState(function () {\n        return {\n          text: ''\n        };\n      });\n\n      navigation.goBack();\n    };\n\n    return _this;\n  }\n\n  _createClass(AddDeck, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 60\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.block,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, \"What is the title of your new deck?\")), React.createElement(View, {\n        style: [styles.block],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        value: this.state.text,\n        onChangeText: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      })), React.createElement(Button, {\n        btnStyle: {\n          backgroundColor: green,\n          borderColor: white\n        },\n        onPress: this.handleSubmit,\n        disabled: this.state.text === '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, \"Create Deck\")));\n    }\n  }]);\n\n  return AddDeck;\n}(Component);\nAddDeck.propTypes = {\n  navigation: PropTypes.object.isRequired,\n  addDeck: PropTypes.func.isRequired\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 16,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    backgroundColor: gray\n  },\n  block: {\n    marginBottom: 20\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: 32\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: textGray,\n    backgroundColor: white,\n    paddingLeft: 10,\n    paddingRight: 10,\n    borderRadius: 5,\n    fontSize: 20,\n    height: 40,\n    marginBottom: 20\n  }\n});\nexport default connect(null, {\n  addDeck: addDeck\n})(AddDeck);","map":{"version":3,"sources":["C:/Users/Dekiller_j/Desktop/MyWorks/mobile-flashcards/components/AddDeck.js"],"names":["React","Component","PropTypes","gray","green","white","textGray","connect","addDeck","AddDeck","state","text","handleChange","setState","handleSubmit","props","navigation","goBack","styles","container","height","block","title","input","backgroundColor","borderColor","propTypes","object","isRequired","func","StyleSheet","create","flex","paddingTop","paddingLeft","paddingRight","paddingBottom","marginBottom","textAlign","fontSize","borderWidth","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Text, View, StyleSheet, TextInput, Button } from 'react-native';\r\nimport { gray, green, white, textGray } from '../utils/colors';\r\nimport { connect } from 'react-redux';\r\nimport { addDeck } from '../actions/index';\r\n\r\nexport class AddDeck extends Component {\r\n  static propTypes = {\r\n    navigation: PropTypes.object.isRequired,\r\n    addDeck: PropTypes.func.isRequired\r\n  };\r\n  state = {\r\n    text: ''\r\n  };\r\n  handleChange = text => {\r\n    this.setState({ text });\r\n  };\r\n  handleSubmit = () => {\r\n    const { addDeck, navigation } = this.props;\r\n\r\n    addDeck(this.state.text);\r\n    this.setState(() => ({ text: '' }));\r\n    navigation.goBack();\r\n  };\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={{ height: 60 }} />\r\n        <View style={styles.block}>\r\n          <Text style={styles.title}>What is the title of your new deck?</Text>\r\n        </View>\r\n        <View style={[styles.block]}>\r\n          <TextInput\r\n            style={styles.input}\r\n            value={this.state.text}\r\n            onChangeText={this.handleChange}\r\n          />\r\n        </View>\r\n        <Button\r\n          btnStyle={{ backgroundColor: green, borderColor: white ,}}\r\n          onPress={this.handleSubmit}\r\n          disabled={this.state.text === ''}\r\n        >\r\n          <Text>Create Deck</Text>\r\n        </Button>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 16,\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    paddingBottom: 16,\r\n    backgroundColor: gray\r\n  },\r\n  block: {\r\n    marginBottom: 20\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    fontSize: 32\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: textGray,\r\n    backgroundColor: white,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    borderRadius: 5,\r\n    fontSize: 20,\r\n    height: 40,\r\n    marginBottom: 20\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  { addDeck }\r\n)(AddDeck);"]},"metadata":{},"sourceType":"module"}