{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dekiller_j\\\\Desktop\\\\MyWorks\\\\mobile-flashcards\\\\components\\\\DeckList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { connect } from 'react-redux';\nimport Deck from \"./Deck\";\nimport { gray, green } from \"../utils/colors\";\nimport { handleInitialData } from \"../actions/index\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { DeckDetail } from \"./DeckDetail\";\n\nvar DeckList = function (_Component) {\n  _inherits(DeckList, _Component);\n\n  var _super = _createSuper(DeckList);\n\n  function DeckList() {\n    _classCallCheck(this, DeckList);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DeckList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.handleInitialData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          decks = _this$props.decks,\n          navigation = _this$props.navigation;\n      return React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, \"Mobile Flashcards\"), Object.values(decks).map(function (deck) {\n        return React.createElement(TouchableOpacity, {\n          key: deck.title,\n          onPress: function onPress() {\n            return navigation.navigate('DeckDetail', {\n              title: deck.title\n            });\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }\n        }, React.createElement(Deck, {\n          id: deck.title,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }\n        }));\n      }), React.createElement(View, {\n        style: {\n          marginBottom: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return DeckList;\n}(Component);\n\nvar DeckListStack = createStackNavigator();\n\nfunction DeckListScreen() {\n  return React.createElement(DeckListStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, React.createElement(DeckListStack.Screen, {\n    name: \"DeckDetail\",\n    component: DeckDetail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 16,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    backgroundColor: gray\n  },\n  title: {\n    fontSize: 40,\n    textAlign: 'center',\n    marginBottom: 16,\n    color: green\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    decks: state\n  };\n};\n\nexport default connect(mapStateToProps, {\n  handleInitialData: handleInitialData\n})(DeckList);","map":{"version":3,"sources":["C:/Users/Dekiller_j/Desktop/MyWorks/mobile-flashcards/components/DeckList.js"],"names":["React","Component","connect","Deck","gray","green","handleInitialData","createStackNavigator","DeckDetail","DeckList","props","decks","navigation","styles","title","Object","values","map","deck","navigate","marginBottom","DeckListStack","DeckListScreen","StyleSheet","create","container","flex","paddingTop","paddingLeft","paddingRight","paddingBottom","backgroundColor","fontSize","textAlign","color","mapStateToProps","state"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP;AACA,SAASC,IAAT,EAAeC,KAAf;AACA,SAASC,iBAAT;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,UAAT;;IAIMC,Q;;;;;;;;;;;;;WACF,6BAAmB;AACf,WAAKC,KAAL,CAAWJ,iBAAX;AACH;;;WACD,kBAAQ;AAAA;;AACJ,wBAA8B,KAAKI,KAAnC;AAAA,UAAQC,KAAR,eAAQA,KAAR;AAAA,UAAeC,UAAf,eAAeA,UAAf;AACA,aACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEKC,MAAM,CAACC,MAAP,CAAcL,KAAd,EAAqBM,GAArB,CAAyB,UAAAC,IAAI,EAAI;AAClC,eACI,oBAAC,gBAAD;AACA,UAAA,GAAG,EAAEA,IAAI,CAACJ,KADV;AAEA,UAAA,OAAO,EAAE;AAAA,mBACLF,UAAU,CAACO,QAAX,CAAoB,YAApB,EAAkC;AAAEL,cAAAA,KAAK,EAAEI,IAAI,CAACJ;AAAd,aAAlC,CADK;AAAA,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMA,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAEI,IAAI,CAACJ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANA,CADJ;AAUC,OAXA,CAFL,EAcI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACM,UAAAA,YAAY,EAAE;AAAf,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,CADJ;AAkBH;;;;EAxBkBnB,S;;AA2BvB,IAAMoB,aAAa,GAAGd,oBAAoB,EAA1C;;AAEA,SAASe,cAAT,GAA0B;AACzB,SACE,oBAAC,aAAD,CAAe,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,aAAD,CAAe,MAAf;AAAsB,IAAA,IAAI,EAAC,YAA3B;AAAwC,IAAA,SAAS,EAAEd,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADF;AAKA;;AAGD,IAAMK,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,EAFH;AAGTC,IAAAA,WAAW,EAAE,EAHJ;AAITC,IAAAA,YAAY,EAAE,EAJL;AAKTC,IAAAA,aAAa,EAAE,EALN;AAMTC,IAAAA,eAAe,EAAE3B;AANR,GADkB;AAS7BU,EAAAA,KAAK,EAAE;AACLkB,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLb,IAAAA,YAAY,EAAE,EAHT;AAILc,IAAAA,KAAK,EAAE7B;AAJF;AATsB,CAAlB,CAAf;;AAiBE,IAAM8B,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAAEzB,IAAAA,KAAK,EAAEyB;AAAT,GAAL;AAAA,CAA7B;;AAEA,eAAelC,OAAO,CACpBiC,eADoB,EAEpB;AAAE7B,EAAAA,iBAAiB,EAAjBA;AAAF,CAFoB,CAAP,CAGbG,QAHa,CAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport {Text,ScrollView, View, TouchableOpacity, StyleSheet} from 'react-native' \r\nimport { connect } from 'react-redux';\r\nimport Deck from './Deck';\r\nimport { gray, green } from '../utils/colors';\r\nimport { handleInitialData } from '../actions/index'\r\nimport { createStackNavigator } from '@react-navigation/stack'\r\nimport { DeckDetail } from './DeckDetail';\r\n\r\n\r\n\r\nclass DeckList extends Component{\r\n    componentDidMount(){\r\n        this.props.handleInitialData()\r\n    }\r\n    render(){\r\n        const { decks, navigation } = this.props;\r\n        return(\r\n            <ScrollView>\r\n                <Text style={styles.title}>Mobile Flashcards</Text>\r\n                {Object.values(decks).map(deck => {\r\n                return (\r\n                    <TouchableOpacity\r\n                    key={deck.title}\r\n                    onPress={() =>\r\n                        navigation.navigate('DeckDetail', { title: deck.title })\r\n                    }\r\n                    >\r\n                    <Deck id={deck.title} />\r\n                    </TouchableOpacity>\r\n                    )\r\n                })}\r\n                <View style={{marginBottom: 30}}/>\r\n            </ScrollView>\r\n        )\r\n    }\r\n}\r\n\r\nconst DeckListStack = createStackNavigator();\r\n\r\nfunction DeckListScreen() {\r\n return (\r\n   <DeckListStack.Navigator>\r\n    <DeckListStack.Screen name=\"DeckDetail\" component={DeckDetail} /> \r\n   </DeckListStack.Navigator>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 16,\r\n      paddingLeft: 16,\r\n      paddingRight: 16,\r\n      paddingBottom: 16,\r\n      backgroundColor: gray\r\n    },\r\n    title: {\r\n      fontSize: 40,\r\n      textAlign: 'center',\r\n      marginBottom: 16,\r\n      color: green\r\n    }\r\n  });\r\n  \r\n  const mapStateToProps = state => ({ decks: state });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { handleInitialData }\r\n  )(DeckList);"]},"metadata":{},"sourceType":"module"}