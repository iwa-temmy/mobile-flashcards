{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Dekiller_j\\\\Desktop\\\\MyWorks\\\\mobile-flashcards\\\\components\\\\MainTabNavigator.js\";\n\nimport React from 'react';\nimport { platform } from \"react-native-web/dist/index\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { createBottomTabNavigator, createStackNavigator } from 'react-navigation';\nimport DeckList from \"../components/DeckList\";\nimport AddDeck from \"../components/AddDeck\";\nimport DeckDetail from \"../components/DeckDetail\";\nimport AddCard from \"../components/AddCard\";\nimport Quiz from \"../components/Quiz\";\nimport Settings from \"../components/Settings\";\nimport { darkGray, white, green, lightGreen } from \"../utils/colors\";\nvar isIOS = Platform.OS === 'ios' ? true : false;\nvar routeConfigs = {\n  Decks: {\n    screen: DeckList,\n    navigationOptions: {\n      tabBarLabel: 'Decks',\n      tabBarIcon: function tabBarIcon(_ref) {\n        var tintColor = _ref.tintColor;\n        return React.createElement(Icon.Ionicons, {\n          name: isIOS ? 'ios-bookmarks' : 'md-bookmarks',\n          size: 30,\n          color: tintColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 9\n          }\n        });\n      }\n    }\n  },\n  AddDeck: {\n    screen: AddDeck,\n    navigationOptions: {\n      tabBarLabel: 'Add Deck',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var tintColor = _ref2.tintColor;\n        return React.createElement(Icon.FontAwesome, {\n          name: \"plus-square\",\n          size: 30,\n          color: tintColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 9\n          }\n        });\n      }\n    }\n  },\n  Settings: {\n    screen: Settings,\n    navigationOptions: {\n      tabBarLabel: 'Settings',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var tintColor = _ref3.tintColor;\n        return React.createElement(Icon.FontAwesome, {\n          name: \"sliders\",\n          size: 30,\n          color: tintColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }\n        });\n      }\n    }\n  }\n};\nrouteConfigs.Decks.navigationOptions.tabBarIcon.propTypes = {\n  tintColor: PropTypes.string.isRequired\n};\nrouteConfigs.AddDeck.navigationOptions.tabBarIcon.propTypes = {\n  tintColor: PropTypes.string.isRequired\n};\nrouteConfigs.Settings.navigationOptions.tabBarIcon.propTypes = {\n  tintColor: PropTypes.string.isRequired\n};\nvar tabNavigatorConfig = {\n  navigationOptions: {\n    header: null\n  },\n  defaultNavigationOptions: {\n    bounces: true\n  },\n  tabBarOptions: {\n    activeTintColor: green,\n    style: {\n      height: 60,\n      backgroundColor: white,\n      shadowColor: 'rgba(0,0,0, 0.24)',\n      shadowOffset: {\n        width: 0,\n        height: 3\n      },\n      shadowRadius: 6,\n      shadowOpacity: 1,\n      borderTopWidth: 1,\n      borderTopColor: darkGray\n    },\n    labelStyle: {\n      fontSize: 12,\n      fontWeight: 'bold'\n    },\n    tabStyle: {\n      marginTop: 5,\n      marginBottom: 3\n    },\n    showIcon: true\n  }\n};\nvar Tabs = createBottomTabNavigator(routeConfigs, tabNavigatorConfig);\nvar MainNavigator = createStackNavigator({\n  Home: {\n    screen: Tabs\n  },\n  DeckDetail: {\n    screen: DeckDetail,\n    navigationOptions: {\n      headerTintColor: green,\n      headerStyle: {\n        backgroundColor: lightGreen\n      },\n      title: 'Deck Details'\n    }\n  },\n  AddCard: {\n    screen: AddCard,\n    navigationOptions: {\n      headerTintColor: green,\n      headerStyle: {\n        backgroundColor: lightGreen\n      },\n      headerTitleStyle: {\n        textAlign: 'center',\n        justifyContent: 'center',\n        textAlign: 'center'\n      },\n      title: 'Add Card'\n    }\n  },\n  Quiz: {\n    screen: Quiz,\n    navigationOptions: {\n      headerTintColor: green,\n      headerStyle: {\n        backgroundColor: lightGreen\n      }\n    }\n  }\n}, {\n  headerLayoutPreset: 'center'\n});\nexport default MainNavigator;","map":{"version":3,"sources":["C:/Users/Dekiller_j/Desktop/MyWorks/mobile-flashcards/components/MainTabNavigator.js"],"names":["React","platform","MaterialIcons","createBottomTabNavigator","createStackNavigator","DeckList","AddDeck","DeckDetail","AddCard","Quiz","Settings","darkGray","white","green","lightGreen","isIOS","Platform","OS","routeConfigs","Decks","screen","navigationOptions","tabBarLabel","tabBarIcon","tintColor","propTypes","PropTypes","string","isRequired","tabNavigatorConfig","header","defaultNavigationOptions","bounces","tabBarOptions","activeTintColor","style","height","backgroundColor","shadowColor","shadowOffset","width","shadowRadius","shadowOpacity","borderTopWidth","borderTopColor","labelStyle","fontSize","fontWeight","tabStyle","marginTop","marginBottom","showIcon","Tabs","MainNavigator","Home","headerTintColor","headerStyle","title","headerTitleStyle","textAlign","justifyContent","headerLayoutPreset"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { platform } from 'react-native'\r\nimport { MaterialIcons } from '@expo/vector-icons'\r\nimport { createBottomTabNavigator, createStackNavigator } from 'react-navigation'\r\nimport DeckList from '../components/DeckList';\r\nimport AddDeck from '../components/AddDeck';\r\nimport DeckDetail from '../components/DeckDetail';\r\nimport AddCard from '../components/AddCard';\r\nimport Quiz from '../components/Quiz';\r\nimport Settings from '../components/Settings'\r\n\r\nimport { darkGray, white, green, lightGreen } from '../utils/colors';\r\n\r\nconst isIOS = Platform.OS === 'ios' ? true : false;\r\n\r\nconst routeConfigs = {\r\n  Decks: {\r\n    screen: DeckList,\r\n    navigationOptions: {\r\n      tabBarLabel: 'Decks',\r\n      tabBarIcon: ({ tintColor }) => (\r\n        <Icon.Ionicons\r\n          name={isIOS ? 'ios-bookmarks' : 'md-bookmarks'}\r\n          size={30}\r\n          color={tintColor}\r\n        />\r\n      )\r\n    }\r\n  },\r\n  AddDeck: {\r\n    screen: AddDeck,\r\n    navigationOptions: {\r\n      tabBarLabel: 'Add Deck',\r\n      tabBarIcon: ({ tintColor }) => (\r\n        <Icon.FontAwesome name=\"plus-square\" size={30} color={tintColor} />\r\n      )\r\n    }\r\n  },\r\n  Settings: {\r\n    screen: Settings,\r\n    navigationOptions: {\r\n      tabBarLabel: 'Settings',\r\n      tabBarIcon: ({ tintColor }) => (\r\n        <Icon.FontAwesome name=\"sliders\" size={30} color={tintColor} />\r\n      )\r\n    }\r\n  }\r\n};\r\n\r\nrouteConfigs.Decks.navigationOptions.tabBarIcon.propTypes = {\r\n  tintColor: PropTypes.string.isRequired\r\n};\r\nrouteConfigs.AddDeck.navigationOptions.tabBarIcon.propTypes = {\r\n  tintColor: PropTypes.string.isRequired\r\n};\r\nrouteConfigs.Settings.navigationOptions.tabBarIcon.propTypes = {\r\n  tintColor: PropTypes.string.isRequired\r\n};\r\n\r\nconst tabNavigatorConfig = {\r\n  navigationOptions: {\r\n    header: null\r\n  },\r\n  defaultNavigationOptions: {\r\n    bounces: true\r\n  },\r\n  tabBarOptions: {\r\n    activeTintColor: green,\r\n    style: {\r\n      height: 60,\r\n      backgroundColor: white,\r\n      shadowColor: 'rgba(0,0,0, 0.24)',\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 3\r\n      },\r\n      shadowRadius: 6,\r\n      shadowOpacity: 1,\r\n      borderTopWidth: 1,\r\n      borderTopColor: darkGray\r\n    },\r\n    labelStyle: {\r\n      fontSize: 12,\r\n      fontWeight: 'bold'\r\n    },\r\n    tabStyle: {\r\n      marginTop: 5,\r\n      marginBottom: 3\r\n    },\r\n    showIcon: true\r\n  }\r\n};\r\n\r\nconst Tabs = createBottomTabNavigator(routeConfigs, tabNavigatorConfig);\r\n\r\nconst MainNavigator = createStackNavigator(\r\n  {\r\n    Home: {\r\n      screen: Tabs\r\n    },\r\n    DeckDetail: {\r\n      screen: DeckDetail,\r\n      navigationOptions: {\r\n        headerTintColor: green,\r\n        headerStyle: {\r\n          backgroundColor: lightGreen\r\n        },\r\n        title: 'Deck Details'\r\n      }\r\n    },\r\n    AddCard: {\r\n      screen: AddCard,\r\n      navigationOptions: {\r\n        headerTintColor: green,\r\n        headerStyle: {\r\n          backgroundColor: lightGreen\r\n        },\r\n        headerTitleStyle: {\r\n          textAlign: 'center',\r\n          justifyContent: 'center',\r\n          textAlign: 'center'\r\n        },\r\n        title: 'Add Card'\r\n      }\r\n    },\r\n    Quiz: {\r\n      screen: Quiz,\r\n      navigationOptions: {\r\n        headerTintColor: green,\r\n        headerStyle: {\r\n          backgroundColor: lightGreen\r\n        }\r\n      }\r\n    }\r\n  },\r\n  { headerLayoutPreset: 'center' }\r\n);\r\n\r\nexport default MainNavigator;\r\n"]},"metadata":{},"sourceType":"module"}