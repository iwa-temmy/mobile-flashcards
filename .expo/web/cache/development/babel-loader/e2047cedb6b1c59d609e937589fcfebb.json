{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dekiller_j\\\\Desktop\\\\MyWorks\\\\mobile-flashcards\\\\components\\\\Settings.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { gray, white, red, textGray, green } from \"../utils/colors\";\nimport { resetDecks } from \"../utils/_api.js\";\nimport { connect } from 'react-redux';\nimport { resetStore } from \"../actions/index\";\nexport var Settings = function (_Component) {\n  _inherits(Settings, _Component);\n\n  var _super = _createSuper(Settings);\n\n  function Settings() {\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleResetDecks = function () {\n      var _this$props = _this.props,\n          resetStore = _this$props.resetStore,\n          navigation = _this$props.navigation;\n      resetStore();\n      resetDecks();\n      navigation.goBack();\n    };\n\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, \" Settings \"), React.createElement(View, {\n        style: styles.block,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.blockContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.blockText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, \"This will reset the data back to the original data set.\"), React.createElement(View, {\n        style: {\n          height: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }), React.createElement(TouchButton, {\n        btnStyle: {\n          backgroundColor: red,\n          borderColor: white\n        },\n        onPress: this.handleResetDecks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, \"Reset Data\"))));\n    }\n  }]);\n\n  return Settings;\n}(Component);\nSettings.propTypes = {\n  navigation: PropTypes.object.isRequired,\n  resetStore: PropTypes.func.isRequired\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 16,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    backgroundColor: gray\n  },\n  title: {\n    fontSize: 40,\n    textAlign: 'center',\n    marginBottom: 16,\n    color: green\n  },\n  block: {\n    marginBottom: 20\n  },\n  blockContainer: {\n    borderWidth: 1,\n    borderColor: '#aaa',\n    backgroundColor: white,\n    borderRadius: 5,\n    paddingTop: 20,\n    paddingRight: 20,\n    paddingLeft: 20\n  },\n  blockText: {\n    fontSize: 18,\n    color: textGray\n  }\n});\nexport default connect(null, {\n  resetStore: resetStore\n})(Settings);","map":{"version":3,"sources":["C:/Users/Dekiller_j/Desktop/MyWorks/mobile-flashcards/components/Settings.js"],"names":["React","Component","PropTypes","gray","white","red","textGray","green","resetDecks","connect","resetStore","Settings","handleResetDecks","props","navigation","goBack","styles","container","title","block","blockContainer","blockText","height","backgroundColor","borderColor","propTypes","object","isRequired","func","StyleSheet","create","flex","paddingTop","paddingLeft","paddingRight","paddingBottom","fontSize","textAlign","marginBottom","color","borderWidth","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Text, View, StyleSheet } from 'react-native';\r\nimport { gray, white, red, textGray, green } from '../utils/colors';\r\nimport { resetDecks } from '../utils/_api.js';\r\nimport { connect } from 'react-redux';\r\nimport { resetStore } from '../actions/index';\r\n\r\nexport class Settings extends Component {\r\n  static propTypes = {\r\n    navigation: PropTypes.object.isRequired,\r\n    resetStore: PropTypes.func.isRequired\r\n  };\r\n  handleResetDecks = () => {\r\n    const { resetStore, navigation } = this.props;\r\n\r\n    resetStore();\r\n    resetDecks();\r\n    navigation.goBack();\r\n  };\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}> Settings </Text>\r\n        <View style={styles.block}>\r\n          <View style={styles.blockContainer}>\r\n            <Text style={styles.blockText}>\r\n              This will reset the data back to the original data set.\r\n            </Text>\r\n            <View style={{ height: 20 }} />\r\n            <TouchButton\r\n              btnStyle={{ backgroundColor: red, borderColor: white }}\r\n              onPress={this.handleResetDecks}\r\n            >\r\n              Reset Data\r\n            </TouchButton>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 16,\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    paddingBottom: 16,\r\n    backgroundColor: gray\r\n  },\r\n  title: {\r\n    fontSize: 40,\r\n    textAlign: 'center',\r\n    marginBottom: 16,\r\n    color: green\r\n  },\r\n  block: {\r\n    marginBottom: 20\r\n  },\r\n  blockContainer: {\r\n    borderWidth: 1,\r\n    borderColor: '#aaa',\r\n    backgroundColor: white,\r\n    borderRadius: 5,\r\n    paddingTop: 20,\r\n    paddingRight: 20,\r\n    paddingLeft: 20\r\n  },\r\n  blockText: {\r\n    fontSize: 18,\r\n    color: textGray\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  { resetStore }\r\n)(Settings);"]},"metadata":{},"sourceType":"module"}